@startuml
'https://plantuml.com/class-diagram

abstract class User
class Recipient
class Provider
class ErrandElement
class CreditCard
interface UserVisitor
interface ServiceVisitor
abstract class PaymentMethod
class CreditCard
class PayPal
class Stripe

'Inheritance
User <|-- Recipient
User <|-- Provider
ErrandService  <|-- TransportErrand
ErrandService  <|-- RelocationErrand
ErrandService  <|-- CarPoolErrand

'association
ErrandElement "0..*" - "1" Provider
ErrandElement "0..*" - "1" Recipient
ErrandElement "0..*" *-- "1" ErrandService

'aggregation
User "0..*" o-- "1" PaymentMethod
ErrandElement "0..*" o-- "1" PaymentMethod

'class Provider implements ProviderService
class ErrandElement implements Element
class ErrandUserVisitor implements UserVisitor
class ErrandServiceVisitor implements ServiceVisitor
class SmallTaxi implements Mean
class BigTaxi implements Mean
class SmallTruck implements Mean
class BigTruck implements Mean
class IndependantVehicle implements Mean

Stripe --|> PaymentMethod
CreditCard --|> PaymentMethod
PayPal --|> PaymentMethod

abstract class ErrandService{
    Integer id
    Mean mean
    Timestamp acceptanceDate
    Boolean rating
    Text review
}

abstract class User {
    Integer id
    String fullname
    String email
    String passw
    login()
    logout()
}

abstract class Mean{
    Integer id
    SCOPE scope
    String imgsPath
}

'interface ProviderService{
'    SERVICE service
'    Mean mean
'}

class Recipient{
}
class Provider{
 SERVICE service
 Mean mean
}


interface Element{
    accept(Visitor visitor) : void
}

class ErrandElement{
    SERVICE service
    SCOPE scope
'    ErrandService errandService
'    PaymentMethod paymentMethod
    Timestamp publishDate
    accept(UserVisitor visitor) : void
    accept(ErrandServiceVisitor errandServiceVisitor) : void
}

interface UserVisitor{
    visit(User user) : void
}
interface ServiceVisitor{
    visit(ErrandService errandService) : void
}

class ErrandUserVisitor{
    visit(Recipient recipient) : void
    visit(Provider provider) : void

}

class ErrandServiceVisitor{
    visit(TransportErrand transportErrand) : void
    visit(RelocationErrand relocationErrand) : void
    visit(CarPoolErrand carPoolErrand) : void
}

enum SERVICE {
TRANSPORT
RELOCATION
CARPOOL
}
enum SCOPE {
LOCAL
NATIONAL
NATIONAL&LOCAL
}

@enduml